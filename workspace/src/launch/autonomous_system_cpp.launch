<?xml version="1.0"?>
<launch>
    <!-- ========== C++高性能自主飞行系统 ========== -->
    
    <!-- 系统参数 -->
    <arg name="vehicle_id" default="0"/>
    <arg name="fcu_url" default="udp://:14540@127.0.0.1:14557"/>
    <arg name="gcs_url" default=""/>
    <arg name="log_output" default="screen"/>
    
    <!-- 坐标系参数 -->
    <param name="map_frame" value="map" />
    <param name="base_frame" value="base_link" />
    <param name="world_frame" value="world" />
    
    <!-- ========== 1. LIVO SLAM系统 ========== -->
    <group ns="livo">
        <rosparam file="$(find livo)/config/velodyne.yaml" command="load" />
        <node pkg="livo" type="livo_node" name="livo_node" output="$(arg log_output)">
            <remap from="/velodyne_points" to="/velodyne_points"/>
            <remap from="/imu" to="/mavros/imu/data"/>
        </node>
    </group>
    
    <!-- ========== 2. 定位模块 (C++) ========== -->
    <group ns="localization">
        <node pkg="localization" type="slam_processor_node" name="slam_processor" output="$(arg log_output)">
            <!-- 滤波参数 -->
            <param name="filter_alpha" value="0.8"/>
            <param name="publish_rate" value="50.0"/>
            <param name="timeout_threshold" value="0.5"/>
            
            <!-- 坐标系 -->
            <param name="map_frame" value="map"/>
            <param name="base_frame" value="base_link"/>
            
            <!-- 话题重映射 -->
            <remap from="/Odometry" to="/livo/Odometry"/>
        </node>
        
        <!-- Python可视化工具(可选) -->
        <node pkg="localization" type="slam_visualizer.py" name="slam_visualizer" output="$(arg log_output)">
            <param name="enable_visualization" value="true"/>
        </node>
    </group>
    
    <!-- ========== 3. 路径规划模块 (C++) ========== -->
    <group ns="planning">
        <node pkg="planning" type="trajectory_planner_node" name="trajectory_planner" output="$(arg log_output)">
            <!-- 规划参数 -->
            <param name="max_velocity" value="3.0"/>
            <param name="max_acceleration" value="2.0"/>
            <param name="planning_frequency" value="10.0"/>
            <param name="safety_margin" value="0.5"/>
            
            <!-- 话题重映射 -->
            <remap from="current_pose" to="/localization/current_pose"/>
        </node>
    </group>
    
    <!-- ========== 4. 控制模块 (C++) ========== -->
    <group ns="control">
        <node pkg="control" type="trajectory_tracker_node" name="trajectory_tracker" output="$(arg log_output)">
            <!-- 控制参数 -->
            <param name="control_frequency" value="100.0"/>
            <param name="max_velocity" value="5.0"/>
            <param name="max_acceleration" value="10.0"/>
            <param name="position_tolerance" value="0.1"/>
            <param name="velocity_tolerance" value="0.2"/>
            
            <!-- PID参数 -->
            <rosparam param="position_pid">
                kp: [2.0, 2.0, 3.0]
                ki: [0.1, 0.1, 0.2]
                kd: [0.5, 0.5, 0.3]
            </rosparam>
            
            <rosparam param="velocity_pid">
                kp: [1.0, 1.0, 2.0]
                ki: [0.05, 0.05, 0.1]
                kd: [0.2, 0.2, 0.1]
            </rosparam>
            
            <!-- 话题重映射 -->
            <remap from="current_pose" to="/localization/current_pose"/>
            <remap from="target_path" to="/planning/planned_path"/>
        </node>
    </group>
    
    <!-- ========== 5. MAVROS接口 ========== -->
    <group ns="mavros">
        <!-- MAVROS核心 -->
        <include file="$(find mavros)/launch/px4.launch">
            <arg name="fcu_url" value="$(arg fcu_url)"/>
            <arg name="gcs_url" value="$(arg gcs_url)"/>
            <arg name="log_output" value="$(arg log_output)"/>
        </include>
        
        <!-- 自定义MAVROS桥接器 -->
        <node pkg="interface" type="mavros_bridge_node" name="mavros_bridge" output="$(arg log_output)">
            <!-- 通信参数 -->
            <param name="heartbeat_rate" value="20.0"/>
            <param name="status_rate" value="10.0"/>
            <param name="connection_timeout" value="5.0"/>
            
            <!-- 话题重映射 -->
            <remap from="control_command" to="/control/control_output"/>
            <remap from="slam_odometry" to="/localization/filtered_odom"/>
        </node>
        
        <!-- 视觉位置发布器 -->
        <node pkg="interface" type="vision_pose_publisher_node" name="vision_pose_publisher" output="$(arg log_output)">
            <param name="publish_rate" value="30.0"/>
            <remap from="slam_pose" to="/localization/current_pose"/>
            <remap from="vision_pose" to="/mavros/vision_pose/pose"/>
        </node>
    </group>
    
    <!-- ========== 6. 系统监控和调试 ========== -->
    <group ns="system">
        <!-- 系统状态监控 -->
        <node pkg="system_monitor" type="system_monitor_node" name="system_monitor" output="$(arg log_output)" if="false">
            <param name="monitor_frequency" value="1.0"/>
        </node>
        
        <!-- RViz可视化 -->
        <node pkg="rviz" type="rviz" name="rviz" 
              args="-d $(find launch)/config/autonomous_system_cpp.rviz" 
              output="$(arg log_output)" if="false"/>
    </group>
    
    <!-- ========== TF变换 ========== -->
    <!-- 静态变换：地图到世界坐标系 -->
    <node pkg="tf2_ros" type="static_transform_publisher" name="map_to_world"
          args="0 0 0 0 0 0 world map"/>
    
    <!-- 动态变换将由各个模块自动发布 -->
    
    <!-- ========== 参数服务器 ========== -->
    <rosparam param="system_config">
        # 系统配置
        autonomous_system:
            version: "2.0-cpp"
            architecture: "layered_cpp"
            real_time: true
            
        # 性能参数
        performance:
            localization_rate: 50
            control_rate: 100
            planning_rate: 10
            interface_rate: 20
            
        # 安全参数
        safety:
            max_tilt_angle: 30.0      # 度
            max_velocity: 5.0         # m/s
            max_altitude: 50.0        # m
            emergency_land_height: 1.0 # m
            
        # 调试开关
        debug:
            enable_logging: true
            enable_visualization: false
            log_level: "INFO"
    </rosparam>
    
    <!-- ========== 日志配置 ========== -->
    <env name="ROSCONSOLE_CONFIG_FILE" value="$(find launch)/config/custom_rosconsole.conf"/>
    
</launch> 